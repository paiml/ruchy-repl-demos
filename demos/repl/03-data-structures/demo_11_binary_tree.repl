// Binary tree implementation
Tree {
    Empty,
    Node(T, Box<Tree>, Box<Tree>),
}

Tree {
    fun leaf(value) -> Self {
        Tree::Node(value, Box::new(Tree::Empty), Box::new(Tree::Empty))
    }
}

let tree = Tree::Node(
    5,
    Box::new(Tree::leaf(3)),
    Box::new(Tree::leaf(7))
)

// Tree traversal
fun inorder<T::fmt::Display>(tree) {
    match tree {
        Tree::Empty => {},
        Tree::Node(val, left, right) => {
            inorder(left);
            print!("{} ", val);
            inorder(right);
        }
    }
}

inorder(&tree)