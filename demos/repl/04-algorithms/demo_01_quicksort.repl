// Quicksort algorithm implementation in Ruchy
fun quicksort(arr []) {
    if arr.len() <= 1 {
        return;
    }
    
    let pivot_index = partition(arr);
    let (left, right) = arr.split_at_mut(pivot_index);
    
    quicksort(left);
    quicksort(right[1..]);
}

fun partition(arr []) {
    let pivot = arr.len() - 1;
    let i = 0;
    
    for j in 0..pivot {
        if arr[j] <= arr[pivot] {
            arr.swap(i, j);
            i += 1;
        }
    }
    arr.swap(i, pivot);
    i
}

// Test the quicksort
let numbers = [64, 34, 25, 12, 22, 11, 90]
println("Original: {:?}", numbers)

quicksort(numbers)
println("Sorted: {:?}", numbers)