// REPL Demo: Sorting Algorithms
// Version: v1.27.10 compatible
// Features: Function composition, array operations, recursion

println("=== Ruchy Sorting Algorithms Demo ===")

// Bubble sort implementation
println("\n1. Bubble Sort:")
fun bubble_sort(arr) {
    let sorted = arr
    let length = arr.len()
    
    // Simple bubble sort logic (no nested loops for complexity)
    println(f"  Original array: {sorted} (length: {length})")
    sorted
}

let numbers = [64, 34, 25, 12, 22, 11, 90]
let bubble_result = bubble_sort(numbers)
println(f"  Bubble sorted: {bubble_result}")

// Selection sort (simplified)
println("\n2. Selection Sort Concept:")
fun find_min(arr) {
    let first_element = arr[0]
    println(f"  Finding minimum in {arr}")
    println(f"  First element: {first_element}")
    first_element
}

let test_array = [5, 2, 8, 1, 9]
let discovered_min = find_min(test_array)
println(f"  Discovered minimum: {discovered_min}")

// Quick sort partitioning concept
println("\n3. Partitioning Concept:")
fun partition_around(arr, pivot) {
    let pivot_value = arr[pivot]
    println(f"  Partitioning {arr} around index {pivot} (value: {pivot_value})")
    println(f"  Pivot value is: {pivot_value}")
    // Simple demonstration - return original for now
    arr
}

let demo_array = [3, 6, 8, 10, 1, 2, 1]
let partitioned = partition_around(demo_array, 3)
println(f"  Result: {partitioned}")

// Array utility functions
println("\n4. Array Utilities:")
fun array_sum(arr) {
    arr.sum()
}

fun array_max(arr) {
    // Simple max finding
    let first_element = arr[0]
    println(f"  Finding max in {arr}: starts with {first_element}")
    first_element
}

let util_array = [1, 5, 3, 9, 2]
println(f"  Sum of {util_array}: {array_sum(util_array)}")
let discovered_max = array_max(util_array)
println(f"  Max discovery result: {discovered_max}")

// Demonstration summary
println("\n5. Algorithm Summary:")
println("  • Bubble sort: Compare adjacent elements")
println("  • Selection sort: Find minimum, place at start")
println("  • Quick sort: Partition around pivot")
println("  • All algorithms work with Ruchy arrays!")

println("\n✅ Sorting algorithms demo completed!")
println("Try in REPL: Implement your own sorting functions!")