// Longest Common Subsequence
fun lcs(s1, s2) {
    let m = s1.len();
    let n = s2.len();
    let s1_chars = s1.chars().collect();
    let s2_chars = s2.chars().collect();
    
    let mut dp = vec![vec![0; n + 1]; m + 1];
    
    for i in 1..=m {
        for j in 1..=n {
            if s1_chars[i-1] == s2_chars[j-1] {
                dp[i][j] = dp[i-1][j-1] + 1;
            } else {
                dp[i][j] = dp[i-1][j].max(dp[i][j-1]);
            }
        }
    }
    
    dp[m][n]
}

let s1 = "ABCDGH";
let s2 = "AEDFHR";
let length = lcs(s1, s2);
println!("LCS length: {}", length);
length